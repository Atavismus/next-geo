@tailwind base;
@tailwind components;
@tailwind utilities;
@import url('https://fonts.googleapis.com/css2?family=Permanent+Marker&display=swap');

:root {
  --blue: rgb(37, 99, 235);
  --green: rgb(22, 163, 74);
  --red: rgb(220, 38, 38);
  --white: #f2f2f2;
}

body {
  background: url("../../public/bricks.png") repeat;
  padding-bottom: 5%;
  font-family: "Permanent Marker", cursive!important;
}

.small-caps {
  font-variant: small-caps;
}

#geo {
  position: relative;
}

#geo.crossed:before {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  left: -10%;
  width: 120%;
  height: 5px;
  background-color: var(--red);
  transform: rotate(175deg);
  border-top-left-radius: 55%;
  border-top-right-radius: 85%;
  border-bottom-left-radius: 79%;
  border-bottom-right-radius: 66%;
}

#whiteboard {
  background-color: var(--white);
  width: 90%;
  height: 90%;
  margin: auto;
  margin-top: 5%;
  border-radius: 5px;
  border: 10px solid #adb2bd;
  box-shadow: inset -1px 2px 2px #404040, 6px 9px 1px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.game {
  border-top-left-radius: 70%;
  border-top-right-radius: 85%;
  border-bottom-left-radius: 75%;
  border-bottom-right-radius: 60%;
  transform: rotate(-5deg);
}

.game:nth-of-type(2) {
  border-top-left-radius: 85%;
  border-top-right-radius: 70%;
  border-bottom-left-radius: 60%;
  border-bottom-right-radius: 75%;
  transform: rotate(3deg);  
}
.game:nth-of-type(3) {
  border-top-left-radius: 75%;
  border-top-right-radius: 60%;
  border-bottom-left-radius: 70%;
  border-bottom-right-radius: 85%;
  transform: rotate(5deg);  
}
.game:nth-of-type(4) {
  border-top-left-radius: 69%;
  border-top-right-radius: 63%;
  border-bottom-left-radius: 80%;
  border-bottom-right-radius: 88%;
  transform: rotate(-3deg);  
}
.game:nth-of-type(5) {
  border-top-left-radius: 79%;
  border-top-right-radius: 59%;
  border-bottom-left-radius: 70%;
  border-bottom-right-radius: 98%;
  transform: rotate(-4deg);  
}
.game:nth-of-type(6) {
  border-top-left-radius: 69%;
  border-top-right-radius: 89%;
  border-bottom-left-radius: 60%;
  border-bottom-right-radius: 88%;
  transform: rotate(-2deg);  
}

/*Choices are text*/
.choiceText:hover label, .choiceText .radio-fake:checked + label {
  color: #f2f2f2;
  background: var(--blue);
}

.right .choiceText .radio-fake:checked + label {
  background: var(--green);
  border-color: var(--green);
}
.wrong .choiceText .radio-fake:checked + label {
  background: var(--red);
  border-color: var(--red);
}

#submitBtn.disabled, #submitBtn.disabled:hover {
  filter: grayscale(1);
}

@keyframes animToRight {
  100%  {color: var(--green);}
}

@keyframes animToWrong {
  100%  {color: var(--red);}
}

@keyframes resetFromRight {
  0%  {color: var(--green);}
  100%  {color: #000000;}
}

@keyframes resetFromWrong {
  0%  {color: var(--red);}
  100%  {color: #000000;}
}

/*Choices are flags*/
.check {
  margin-left: -55px;
  animation-delay: 350ms!important;
  animation-fill-mode: forwards;
}

.choiceFlag:hover .check, .choiceFlag .radio-fake:checked + label > svg {
  display: block;
}

@keyframes ping {
  75%, 100% {
    transform: scale(1.5);
    opacity: 0;
  }
}
.choiceFlag .radio-fake:checked + label > .check path {
  stroke: rgb(37 99 235);
}

.right .check path {
  stroke: rgb(22 163 74)!important;
}
.wrong .check path {
  stroke: rgb(220 38 38)!important;
}

.right .check {
  animation: ping 1.5s cubic-bezier(0, 0, 0.2, 1);
}
.wrong .check {
  animation: ping 1.5s cubic-bezier(0, 0, 0.2, 1);
}

/*Scoring*/
#score {
  animation-fill-mode: forwards!important;  
}

#score.animToRight {
  animation: animToRight 1000ms;
}

#score.animToWrong {
  animation: animToWrong 1000ms;
}

#score.resetFromRight {
  animation: resetFromRight 1000ms;
}

#score.resetFromWrong {
  animation: resetFromWrong 1000ms;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
